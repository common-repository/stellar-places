{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/jquery.geocomplete.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","window","document","undefined","defaults","bounds","country","map","details","detailsAttribute","autoselect","location","mapOptions","zoom","scrollwheel","mapTypeId","markerOptions","draggable","maxZoom","types","blur","componentTypes","split","placesDetails","GeoComplete","input","options","this","extend","$input","_defaults","_name","init","initMap","initMarker","initGeocoder","initDetails","initLocation","setCenter","google","maps","Map","event","addListener","proxy","mapClicked","mapZoomed","disabled","marker","Marker","markerDragged","componentRestrictions","autocomplete","places","Autocomplete","geocoder","Geocoder","bindTo","placeChanged","keypress","keyCode","find","$details","attribute","each","index","setDetail","latLng","Array","LatLng","setPosition","address","geocode","val","request","getBounds","region","handleGeocode","selectFirstResult","selected","$span1","text","$span2","firstResult","results","status","GeocoderStatus","OK","result","formatted_address","update","length","trigger","argument","center","geometry","viewport","fitBounds","getZoom","setZoom","setAnimation","animation","fillDetails","data","address_components","long_name","short_name","street_address","street_number","route","filter","join","location_type","lat","lng","$detail","$element","toUrlValue","is","resetMarker","place","getPlace","autoSelection","fn","geocomplete","instance","prop","apply","slice","arguments","jQuery"],"mappings":"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","file":"assets/js/jquery.geoComplete.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * jQuery Geocoding and Places Autocomplete Plugin - V 1.5.0\n *\n * @author Martin Kleppe <kleppe@ubilabs.net>, 2012\n * @author Ubilabs http://ubilabs.net, 2012\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\n */\n\n// # $.geocomplete()\n// ## jQuery Geocoding and Places Autocomplete Plugin - V 1.5.0\n//\n// * https://github.com/ubilabs/geocomplete/\n// * by Martin Kleppe <kleppe@ubilabs.net>\n\n(function($, window, document, undefined){\n\n  // ## Options\n  // The default options for this plugin.\n  //\n  // * `map` - Might be a selector, an jQuery object or a DOM element. Default is `false` which shows no map.\n  // * `details` - The container that should be populated with data. Defaults to `false` which ignores the setting.\n  // * `location` - Location to initialize the map on. Might be an address `string` or an `array` with [latitude, longitude] or a `google.maps.LatLng`object. Default is `false` which shows a blank map.\n  // * `bounds` - Whether to snap geocode search to map bounds. Default: `true` if false search globally. Alternatively pass a custom `LatLngBounds object.\n  // * `autoselect` - Automatically selects the highlighted item or the first item from the suggestions list on Enter.\n  // * `detailsAttribute` - The attribute's name to use as an indicator. Default: `\"name\"`\n  // * `mapOptions` - Options to pass to the `google.maps.Map` constructor. See the full list [here](http://code.google.com/apis/maps/documentation/javascript/reference.html#MapOptions).\n  // * `mapOptions.zoom` - The inital zoom level. Default: `14`\n  // * `mapOptions.scrollwheel` - Whether to enable the scrollwheel to zoom the map. Default: `false`\n  // * `mapOptions.mapTypeId` - The map type. Default: `\"roadmap\"`\n  // * `markerOptions` - The options to pass to the `google.maps.Marker` constructor. See the full list [here](http://code.google.com/apis/maps/documentation/javascript/reference.html#MarkerOptions).\n  // * `markerOptions.draggable` - If the marker is draggable. Default: `false`. Set to true to enable dragging.\n  // * `markerOptions.disabled` - Do not show marker. Default: `false`. Set to true to disable marker.\n  // * `maxZoom` - The maximum zoom level too zoom in after a geocoding response. Default: `16`\n  // * `types` - An array containing one or more of the supported types for the places request. Default: `['geocode']` See the full list [here](http://code.google.com/apis/maps/documentation/javascript/places.html#place_search_requests).\n\n  var defaults = {\n    bounds: true,\n    country: null,\n    map: false,\n    details: false,\n    detailsAttribute: \"name\",\n    autoselect: true,\n    location: false,\n\n    mapOptions: {\n      zoom: 14,\n      scrollwheel: false,\n      mapTypeId: \"roadmap\"\n    },\n\n    markerOptions: {\n      draggable: false\n    },\n\n    maxZoom: 16,\n    types: ['geocode'],\n    blur: false\n  };\n\n  // See: [Geocoding Types](https://developers.google.com/maps/documentation/geocoding/#Types)\n  // on Google Developers.\n  var componentTypes = (\"street_address route intersection political \" +\n    \"country administrative_area_level_1 administrative_area_level_2 \" +\n    \"administrative_area_level_3 colloquial_area locality sublocality \" +\n    \"neighborhood premise subpremise postal_code natural_feature airport \" +\n    \"park point_of_interest post_box street_number floor room \" +\n    \"lat lng viewport location \" +\n    \"formatted_address location_type bounds\").split(\" \");\n\n  // See: [Places Details Responses](https://developers.google.com/maps/documentation/javascript/places#place_details_responses)\n  // on Google Developers.\n  var placesDetails = (\"id url website vicinity reference name rating \" +\n    \"international_phone_number icon formatted_phone_number\").split(\" \");\n\n  // The actual plugin constructor.\n  function GeoComplete(input, options) {\n\n    this.options = $.extend(true, {}, defaults, options);\n\n    this.input = input;\n    this.$input = $(input);\n\n    this._defaults = defaults;\n    this._name = 'geocomplete';\n\n    this.init();\n  }\n\n  // Initialize all parts of the plugin.\n  $.extend(GeoComplete.prototype, {\n    init: function(){\n      this.initMap();\n      this.initMarker();\n      this.initGeocoder();\n      this.initDetails();\n      this.initLocation();\n    },\n\n    // Initialize the map but only if the option `map` was set.\n    // This will create a `map` within the given container\n    // using the provided `mapOptions` or link to the existing map instance.\n    initMap: function(){\n      if (!this.options.map){ return; }\n\n      if (typeof this.options.map.setCenter == \"function\"){\n        this.map = this.options.map;\n        return;\n      }\n\n      this.map = new google.maps.Map(\n        $(this.options.map)[0],\n        this.options.mapOptions\n      );\n\n      // add click event listener on the map\n      google.maps.event.addListener(\n        this.map,\n        'click',\n        $.proxy(this.mapClicked, this)\n      );\n\n      google.maps.event.addListener(\n        this.map,\n        'zoom_changed',\n        $.proxy(this.mapZoomed, this)\n      );\n    },\n\n    // Add a marker with the provided `markerOptions` but only\n    // if the option was set. Additionally it listens for the `dragend` event\n    // to notify the plugin about changes.\n    initMarker: function(){\n      if (!this.map){ return; }\n      var options = $.extend(this.options.markerOptions, { map: this.map });\n\n      if (options.disabled){ return; }\n\n      this.marker = new google.maps.Marker(options);\n\n      google.maps.event.addListener(\n        this.marker,\n        'dragend',\n        $.proxy(this.markerDragged, this)\n      );\n    },\n\n    // Associate the input with the autocompleter and create a geocoder\n    // to fall back when the autocompleter does not return a value.\n    initGeocoder: function(){\n\n      var options = {\n        types: this.options.types,\n        bounds: this.options.bounds === true ? null : this.options.bounds,\n        componentRestrictions: this.options.componentRestrictions\n      };\n\n      if (this.options.country){\n        options.componentRestrictions = {country: this.options.country};\n      }\n\n      this.autocomplete = new google.maps.places.Autocomplete(\n        this.input, options\n      );\n\n      this.geocoder = new google.maps.Geocoder();\n\n      // Bind autocomplete to map bounds but only if there is a map\n      // and `options.bindToMap` is set to true.\n      if (this.map && this.options.bounds === true){\n        this.autocomplete.bindTo('bounds', this.map);\n      }\n\n      // Watch `place_changed` events on the autocomplete input field.\n      google.maps.event.addListener(\n        this.autocomplete,\n        'place_changed',\n        $.proxy(this.placeChanged, this)\n      );\n\n      // Prevent parent form from being submitted if user hit enter.\n      this.$input.keypress(function(event){\n        if (event.keyCode === 13){ return false; }\n      });\n\n      // Listen for \"geocode\" events and trigger find action.\n      this.$input.bind(\"geocode\", $.proxy(function(){\n        this.find();\n      }, this));\n\n      // Trigger find action when input element is blured out.\n      // (Usefull for typing partial location and tabing to the next field\n      // or clicking somewhere else.)\n      if (this.options.blur === true){\n        this.$input.blur($.proxy(function(){\n          this.find();\n        }, this));\n      }\n    },\n\n    // Prepare a given DOM structure to be populated when we got some data.\n    // This will cycle through the list of component types and map the\n    // corresponding elements.\n    initDetails: function(){\n      if (!this.options.details){ return; }\n\n      var $details = $(this.options.details),\n        attribute = this.options.detailsAttribute,\n        details = {};\n\n      function setDetail(value){\n        details[value] = $details.find(\"[\" +  attribute + \"=\" + value + \"]\");\n      }\n\n      $.each(componentTypes, function(index, key){\n        setDetail(key);\n        setDetail(key + \"_short\");\n      });\n\n      $.each(placesDetails, function(index, key){\n        setDetail(key);\n      });\n\n      this.$details = $details;\n      this.details = details;\n    },\n\n    // Set the initial location of the plugin if the `location` options was set.\n    // This method will care about converting the value into the right format.\n    initLocation: function() {\n\n      var location = this.options.location, latLng;\n\n      if (!location) { return; }\n\n      if (typeof location == 'string') {\n        this.find(location);\n        return;\n      }\n\n      if (location instanceof Array) {\n        latLng = new google.maps.LatLng(location[0], location[1]);\n      }\n\n      if (location instanceof google.maps.LatLng){\n        latLng = location;\n      }\n\n      if (latLng){\n        if (this.map){ this.map.setCenter(latLng); }\n        if (this.marker){ this.marker.setPosition(latLng); }\n      }\n    },\n\n    // Look up a given address. If no `address` was specified it uses\n    // the current value of the input.\n    find: function(address){\n      this.geocode({\n        address: address || this.$input.val()\n      });\n    },\n\n    // Requests details about a given location.\n    // Additionally it will bias the requests to the provided bounds.\n    geocode: function(request){\n      if (this.options.bounds && !request.bounds){\n        if (this.options.bounds === true){\n          request.bounds = this.map && this.map.getBounds();\n        } else {\n          request.bounds = this.options.bounds;\n        }\n      }\n\n      if (this.options.country){\n        request.region = this.options.country;\n      }\n\n      this.geocoder.geocode(request, $.proxy(this.handleGeocode, this));\n    },\n\n    // Get the selected result. If no result is selected on the list, then get\n    // the first result from the list.\n    selectFirstResult: function() {\n      //$(\".pac-container\").hide();\n\n      var selected = '';\n      // Check if any result is selected.\n      if ($(\".pac-item-selected\")['0']) {\n        selected = '-selected';\n      }\n\n      // Get the first suggestion's text.\n      var $span1 = $(\".pac-container .pac-item\" + selected + \":first span:nth-child(2)\").text();\n      var $span2 = $(\".pac-container .pac-item\" + selected + \":first span:nth-child(3)\").text();\n\n      // Adds the additional information, if available.\n      var firstResult = $span1;\n      if ($span2) {\n        firstResult += \" - \" + $span2;\n      }\n\n      this.$input.val(firstResult);\n\n      return firstResult;\n    },\n\n    // Handles the geocode response. If more than one results was found\n    // it triggers the \"geocode:multiple\" events. If there was an error\n    // the \"geocode:error\" event is fired.\n    handleGeocode: function(results, status){\n      if (status === google.maps.GeocoderStatus.OK) {\n        var result = results[0];\n        this.$input.val(result.formatted_address);\n        this.update(result);\n\n        if (results.length > 1){\n          this.trigger(\"geocode:multiple\", results);\n        }\n\n      } else {\n        this.trigger(\"geocode:error\", status);\n      }\n    },\n\n    // Triggers a given `event` with optional `arguments` on the input.\n    trigger: function(event, argument){\n      this.$input.trigger(event, [argument]);\n    },\n\n    // Set the map to a new center by passing a `geometry`.\n    // If the geometry has a viewport, the map zooms out to fit the bounds.\n    // Additionally it updates the marker position.\n    center: function(geometry){\n\n      if (geometry.viewport){\n        this.map.fitBounds(geometry.viewport);\n        if (this.map.getZoom() > this.options.maxZoom){\n          this.map.setZoom(this.options.maxZoom);\n        }\n      } else {\n        this.map.setZoom(this.options.maxZoom);\n        this.map.setCenter(geometry.location);\n      }\n\n      if (this.marker){\n        this.marker.setPosition(geometry.location);\n        this.marker.setAnimation(this.options.markerOptions.animation);\n      }\n    },\n\n    // Update the elements based on a single places or geoocoding response\n    // and trigger the \"geocode:result\" event on the input.\n    update: function(result){\n\n      if (this.map){\n        this.center(result.geometry);\n      }\n\n      if (this.$details){\n        this.fillDetails(result);\n      }\n\n      this.trigger(\"geocode:result\", result);\n    },\n\n    // Populate the provided elements with new `result` data.\n    // This will lookup all elements that has an attribute with the given\n    // component type.\n    fillDetails: function(result){\n\n      var data = {},\n        geometry = result.geometry,\n        viewport = geometry.viewport,\n        bounds = geometry.bounds;\n\n      // Create a simplified version of the address components.\n      $.each(result.address_components, function(index, object){\n        var name = object.types[0];\n        data[name] = object.long_name;\n        data[name + \"_short\"] = object.short_name;\n      });\n\n      // Add properties of the places details.\n      $.each(placesDetails, function(index, key){\n        data[key] = result[key];\n      });\n\n      // Add infos about the address and geometry.\n      $.extend(data, {\n        formatted_address: result.formatted_address,\n\t      street_address: [data.street_number, data.route]\n\t\t      .filter(function ( val ) {return 'string' === typeof val;}).join(' '),\n        location_type: geometry.location_type || \"PLACES\",\n        viewport: viewport,\n        bounds: bounds,\n        location: geometry.location,\n        lat: geometry.location.lat(),\n        lng: geometry.location.lng()\n      });\n\n      // Set the values for all details.\n      $.each(this.details, $.proxy(function(key, $detail){\n        var value = data[key];\n        this.setDetail($detail, value);\n      }, this));\n\n      this.data = data;\n    },\n\n    // Assign a given `value` to a single `$element`.\n    // If the element is an input, the value is set, otherwise it updates\n    // the text content.\n    setDetail: function($element, value){\n\n      if (value === undefined){\n        value = \"\";\n      } else if (typeof value.toUrlValue == \"function\"){\n        value = value.toUrlValue();\n      }\n\n      if ($element.is(\":input\")){\n        $element.val(value);\n      } else {\n        $element.text(value);\n      }\n    },\n\n    // Fire the \"geocode:dragged\" event and pass the new position.\n    markerDragged: function(event){\n      this.trigger(\"geocode:dragged\", event.latLng);\n    },\n\n    mapClicked: function(event) {\n        this.trigger(\"geocode:click\", event.latLng);\n    },\n\n    mapZoomed: function(event) {\n      this.trigger(\"geocode:zoom\", this.map.getZoom());\n    },\n\n    // Restore the old position of the marker to the last now location.\n    resetMarker: function(){\n      this.marker.setPosition(this.data.location);\n      this.setDetail(this.details.lat, this.data.location.lat());\n      this.setDetail(this.details.lng, this.data.location.lng());\n    },\n\n    // Update the plugin after the user has selected an autocomplete entry.\n    // If the place has no geometry it passes it to the geocoder.\n    placeChanged: function(){\n      var place = this.autocomplete.getPlace();\n\n      if (!place || !place.geometry){\n        if (this.options.autoselect) {\n          // Automatically selects the highlighted item or the first item from the\n          // suggestions list.\n          var autoSelection = this.selectFirstResult();\n          this.find(autoSelection);\n        }\n      } else {\n        // Use the input text if it already gives geometry.\n        this.update(place);\n      }\n    }\n  });\n\n  // A plugin wrapper around the constructor.\n  // Pass `options` with all settings that are different from the default.\n  // The attribute is used to prevent multiple instantiations of the plugin.\n  $.fn.geocomplete = function(options) {\n\n    var attribute = 'plugin_geocomplete';\n\n    // If you call `.geocomplete()` with a string as the first parameter\n    // it returns the corresponding property or calls the method with the\n    // following arguments.\n    if (typeof options == \"string\"){\n\n      var instance = $(this).data(attribute) || $(this).geocomplete().data(attribute),\n        prop = instance[options];\n\n      if (typeof prop == \"function\"){\n        prop.apply(instance, Array.prototype.slice.call(arguments, 1));\n        return $(this);\n      } else {\n        if (arguments.length == 2){\n          prop = arguments[1];\n        }\n        return prop;\n      }\n    } else {\n      return this.each(function() {\n        // Prevent against multiple instantiations.\n        var instance = $.data(this, attribute);\n        if (!instance) {\n          instance = new GeoComplete( this, options );\n          $.data(this, attribute, instance);\n        }\n      });\n    }\n  };\n\n})( jQuery, window, document );\n"],"sourceRoot":""}